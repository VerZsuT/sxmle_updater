(()=>{"use strict";const e=require("electron"),n=require("path"),r=require("fs"),s=require("os"),i={on:(n,r)=>e.ipcRenderer.on(n,r),send:(n,...r)=>e.ipcRenderer.send(n,...r),sendSync:(n,...r)=>e.ipcRenderer.sendSync(n,...r)};e.contextBridge.exposeInMainWorld("ipc",i),global.ipc=i;const t={join:n.join,basename:n.basename,existsSync:r.existsSync,readFileSync:e=>(0,r.readFileSync)(e).toString(),writeFileSync:r.writeFileSync,isDirectory:e=>(0,r.lstatSync)(e).isDirectory(),readdirSync:r.readdirSync};var o;e.contextBridge.exposeInMainWorld("service",t),global.service=t,function(e){e.trucks="trucks",e.trailers="trailers"}(o||(o={}));const c=o;var a;!function(e){e.mods="mods",e.dlc="dlc",e.main="main",e.favorites="favorites"}(a||(a={}));const l=a,d=(...e)=>(0,n.resolve)(__dirname,...e),m=(d("../../"),d("config.json"),d("ingame_texts.json"),d("backups"),d("favicon.ico"),d("backups/initial.pak"),d("winrar"),d("mainTemp"),d("modsTemp"),d("mainTemp/[strings]"),d("mainTemp/[media]/_dlc"),d("mainTemp/[media]/classes"),d("../../../../unins000.exe"),(e,s,i=".xml",t)=>{let o,c=[];if(!(0,r.existsSync)(e))return[];o=(0,r.readdirSync)(e);for(let a=0;a<o.length;a++){const l=(0,n.join)(e,o[a]),d=(0,r.lstatSync)(l);if(s){if(!d.isDirectory())continue;c.push({name:o[a],path:l})}d.isDirectory()&&t?c=[...c,...m(l,!1,i,!0)]:o[a].indexOf(i)>=0&&c.push({name:o[a].replace(i,""),path:l})}return c});let p;window.ipc?p=window.ipc.sendSync:global.ipc&&(p=global.ipc.sendSync);const u=new Proxy({},{get:(e,n)=>{const r=p("property_config_get").value[n];return Array.isArray(r)||"object"!=typeof r||null===r?r:new Proxy(r,{get:(e,n)=>r[n],set:(e,s,i)=>(r[s]=i,u[n]=r,!0)})},set:(e,n,r)=>(e[n]=r,!p("property_config_set",{key:n,value:r}).error)}),y=u;let f;f=window.ipc?window.ipc.sendSync:global.ipc.sendSync;const S=f("getInfo"),g=e=>{window.errorHandler?window.errorHandler(e.message):f("function_alertSync_call",`${e}`.replace("Error: ",""))},x=new Proxy({},{get:(e,n)=>{if(S.properties.includes(n)){const e=f(`property_${n}_get`);return e.error?(g(e.error),null):e.value}if(S.functions.includes(n))return(...e)=>{const r=f(`function_${n}_call`,...e);return r.error?(g(r.error),null):r.value}},set:(e,n,r)=>{if(S.properties.includes(n)){const e=f(`property_${n}_set`,r);return!e.error||(g(e.error),!1)}return!1}}),{unpack:w,openInitialDialog:h,paths:j}=x,k={removeDir:e=>{(0,r.rmSync)(e,{recursive:!0})},findMods:async()=>{const e=(0,s.userInfo)().homedir||(0,s.homedir)()||process.env.HOME,i=[];let t;if(!(0,r.existsSync)(e))return[];if(t=(0,n.join)(e,"Documents/My Games/SnowRunner/base/Mods/.modio/mods"),!(0,r.existsSync)(t))return[];for(const e of(0,r.readdirSync)(t,{withFileTypes:!0})){let s;if(!e.isFile()){s=(0,n.join)(t,e.name);for(const e of(0,r.readdirSync)(s,{withFileTypes:!0})){let t;if(!e.isDirectory()&&(t=(0,n.join)(s,e.name),".pak"===(0,n.extname)(e.name)&&(w(t,(0,n.join)(j.modsTemp,e.name),!0),(0,r.existsSync)((0,n.join)(j.modsTemp,e.name,"classes"))))){const o=(0,n.join)(s,"modio.json");let c=(0,n.basename)(e.name,".pak");(0,r.existsSync)(o)&&(c=JSON.parse((0,r.readFileSync)(o).toString()).name),i.push({name:c,path:t})}}}}for(const e in y.mods.items){const n=y.mods.items[e].path;let r=!1;for(const e in i)i[e].path===n&&(r=!0);r||i.push(y.mods.items[e])}return i},getModPak:()=>{const e=h();let s,i;if(e&&(s=(0,n.basename)(e,".pak"),i=(0,n.basename)(e),w(e,(0,n.join)(j.modsTemp,s),!0),(0,r.existsSync)((0,n.join)(j.modsTemp,s,"classes"))))return{id:s,path:e,name:i}},getList:(e,r)=>{if(r===l.dlc){const r=[];for(const s of y.dlc){const i=`${s.path}/classes`;let t=[];e===c.trucks?t=m((0,n.join)(i,"trucks")):e===c.trailers&&(t=m((0,n.join)(i,"trucks/trailers"))),r.push({dlcName:s.name,items:t})}return r}if(r===l.mods){const r=[];for(const s in y.mods.items){let i=[];const t=y.mods.items[s];(e===c.trucks||e===c.trailers)&&(i=m((0,n.join)(j.modsTemp,s,"classes/trucks"),!1,".xml",!0)),r.push({id:s,name:t.name,items:i})}return r}return e===c.trucks?m((0,n.join)(j.classes,"trucks")):e===c.trailers?m((0,n.join)(j.classes,"trucks/trailers")):void 0}};e.contextBridge.exposeInMainWorld("listPreload",k)})();