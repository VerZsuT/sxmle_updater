(()=>{"use strict";const e=require("electron"),n=require("fs"),r=require("path"),i={on:(n,r)=>e.ipcRenderer.on(n,r),send:(n,...r)=>e.ipcRenderer.send(n,...r),sendSync:(n,...r)=>e.ipcRenderer.sendSync(n,...r)};e.contextBridge.exposeInMainWorld("ipc",i),global.ipc=i;const o={join:r.join,basename:r.basename,existsSync:n.existsSync,readFileSync:e=>(0,n.readFileSync)(e).toString(),writeFileSync:n.writeFileSync,isDirectory:e=>(0,n.lstatSync)(e).isDirectory(),readdirSync:n.readdirSync};let t;e.contextBridge.exposeInMainWorld("service",o),global.service=o,t=window.ipc?window.ipc.sendSync:global.ipc.sendSync;const l=t("getInfo"),a=e=>{window.errorHandler?window.errorHandler(e.message):t("function_alertSync_call",`${e}`.replace("Error: ",""))},c=new Proxy({},{get:(e,n)=>{if(l.properties.includes(n)){const e=t(`property_${n}_get`);return e.error?(a(e.error),null):e.value}if(l.functions.includes(n))return(...e)=>{const r=t(`function_${n}_call`,...e);return r.error?(a(r.error),null):r.value}},set:(e,n,r)=>{if(l.properties.includes(n)){const e=t(`property_${n}_set`,r);return!e.error||(a(e.error),!1)}return!1}});let s;window.ipc?s=window.ipc.sendSync:global.ipc&&(s=global.ipc.sendSync);const p=new Proxy({},{get:(e,n)=>{const r=s("property_config_get").value[n];return Array.isArray(r)||"object"!=typeof r||null===r?r:new Proxy(r,{get:(e,n)=>r[n],set:(e,i,o)=>(r[i]=o,p[n]=r,!0)})},set:(e,n,r)=>(e[n]=r,!s("property_config_set",{key:n,value:r}).error)}),d=p,u=c.texts[d.lang],{openDialog:y,openInitialDialog:w}=c,g={getGameFolder:()=>{const e=y();let i,o,t="";if(e){i=e,o=[(0,r.join)(i,"steamapps/common/SnowRunner/preload/paks/client/initial.pak"),(0,r.join)(i,"common/SnowRunner/preload/paks/client/initial.pak"),(0,r.join)(i,"SnowRunner/en_us/preload/paks/client/initial.pak"),(0,r.join)(i,"en_us/preload/paks/client/initial.pak"),(0,r.join)(i,"preload/paks/client/initial.pak"),(0,r.join)(i,"paks/client/initial.pak"),(0,r.join)(i,"client/initial.pak"),(0,r.join)(i,"initial.pak")];for(const e of o)if((0,n.existsSync)(e)){t=e;break}if(t)return{folder:i,initial:t};window.errorHandler(u.INVALID_FOLDER_ERROR)}else window.errorHandler(u.EMPTY_FOLDER_ERROR)},getInitial:()=>{const e=w();if(e&&"initial.pak"===(0,r.basename)(e)&&(0,n.existsSync)(e))return{initial:e};window.errorHandler(u.INVALID_INITIAL_ERROR)}};e.contextBridge.exposeInMainWorld("setupPreload",g)})();